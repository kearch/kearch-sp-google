/*
 * kearch specialist search engine gateway API
 *
 * kearch specialist search engine gateway API
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		"GET",
		"/v0/sp/gateway/",
		Index,
	},

	{
		"AddAConnectionRequestPost",
		strings.ToUpper("Post"),
		"/v0/sp/gateway/add_a_connection_request",
		AddAConnectionRequestPost,
	},

	{
		"DeleteAConnectionRequestDelete",
		strings.ToUpper("Delete"),
		"/v0/sp/gateway/delete_a_connection_request",
		DeleteAConnectionRequestDelete,
	},

	{
		"GetASummaryGet",
		strings.ToUpper("Get"),
		"/v0/sp/gateway/get_a_summary",
		GetASummaryGet,
	},

	{
		"RetrieveGet",
		strings.ToUpper("Get"),
		"/v0/sp/gateway/retrieve",
		RetrieveGet,
	},
}
